{
  "name": "idl-for-vscode",
  "displayName": "%packageJSON.displayName%",
  "description": "%packageJSON.description%",
  "version": "4.6.2",
  "publisher": "idl",
  "license": "MIT",
  "encryption": "yes",
  "repository": {
    "type": "git",
    "url": "https://github.com/interactive-data-language/vscode-idl"
  },
  "homepage": "https://interactive-data-language.github.io/vscode-idl/",
  "scripts": {
    "build-client": "nx run-many --target=build --projects=client,idl-webview --prod",
    "build-extension": "npm-run-all -s clean build-package-json build-docs build-client build-renderer build-server",
    "build-docs": "node ./tools/build-and-copy-docs.js",
    "build-i18n": "nx build i18n && node ./dist/apps/i18n/main.js",
    "build-package-json": "npm run build-tmlang && npm run build-i18n && nx build package-json && node ./dist/apps/package-json/main.js && prettier --write ./extension/language/schemas/config",
    "build-renderer": "nx build notebook-renderer --prod",
    "build-renderer-dev": "nx build notebook-renderer --configuration=development",
    "build-server": "nx run-many --target=build --projects=server,parsing-worker --prod",
    "build-tmlang": "nx build tmlang-maker && node ./dist/apps/tmlang-maker/main.js --trace-warnings",
    "build-test": "nx build vscode-e2e-runner && nx build client-e2e",
    "clean": "rimraf ./dist",
    "code-prep": "nx run-many --all --target=lint --fix --parallel=5 && nx format:write",
    "compliance": "node compliance/compliance.js",
    "build-test-maker": "nx build test-tokenizer",
    "make-new-tests": "node ./dist/apps/test-tokenizer/main.js --generate-new-tests",
    "make-all-tests": "node ./dist/apps/test-tokenizer/main.js --generate-all-tests",
    "lint-tests": "nx run-many --target=lint --fix --projects=\"tests*\" --parallel=5 &&  nx run-many --target=lint --runInBand --projects=parsing-tokenizer --parallel=5",
    "format-tests": "nx format:write",
    "generate-tests": "npm-run-all build-test-maker make-all-tests lint-tests format-tests",
    "generate-new-tests": "npm-run-all build-test-maker make-new-tests lint-tests format-tests",
    "test-libs": "nx run-many --target=test --runInBand --projects=\"tests*\" --parallel=5 && nx run-many --target=test --runInBand --projects=parsing-tokenizer --parallel=5",
    "ng": "nx",
    "package": "npm i && npm-run-all build-extension pre-package && vsce package",
    "package-and-test": "npm i && npm-run-all build-extension pre-package test-parsing build-test integration-test && vsce package",
    "pre-package": "rimraf ./node_modules/__ngcc_entry_points__.json",
    "pre-dev": "npm-run-all build-package-json build-webview",
    "make-integration-tests": "npm run package && nx build vscode-e2e-runner && nx build client-e2e",
    "test-integration": "node dist/apps/vscode-e2e-runner/main.js",
    "test-everything": "npm-run-all test-libs make-integration-tests test-integration",
    "test-perf": "node --expose-gc --max-old-space-size=12000 --max-semi-space-size=64 ./dist/apps/performance/main.js",
    "test-perf-profile": "node --expose-gc --max-old-space-size=12000 --max-semi-space-size=64 --prof ./dist/apps/performance/main.js",
    "start": "npm run build-package-json && npm run build-renderer-dev && npm run build-docs && nx run-many --target=build --projects=parsing-worker,server,client --watch --parallel",
    "start-client": "nx run-many --target=build --projects=client --watch --parallel",
    "start-perf": "nx run-many --target=build --projects=parsing-worker,performance --watch --parallel",
    "start-notebook": "nx run-many --target=build --projects=notebook-renderer,notebook-components --watch --parallel --configuration=development",
    "start-server": "nx run-many --target=build --projects=parsing-worker,server --watch --parallel",
    "start-test": "nx build vscode-e2e-runner && nx build client-e2e --watch",
    "start-webview": "nx build idl-webview --watch",
    "post-migrate": "rimraf ./node_modules/.cache",
    "docs:dev": "vitepress dev extension/docs",
    "docs:build": "vitepress build extension/docs",
    "docs:build-hosted": "vitepress build extension/docs --base /vscode-idl/",
    "docs:preview": "vitepress preview extension/docs"
  },
  "dependencies": {
    "@vscode/debugadapter": "^1.66.0",
    "@vscode/debugprotocol": "^1.66.0",
    "ajv": "^8.17.1",
    "ansi-styles": "^6.1.0",
    "await-notify": "^1.0.1",
    "case-anything": "^2.1.13",
    "chalk": "^4.1.2",
    "compare-versions": "^6.1.1",
    "deepmerge": "^4.2.2",
    "express": "^4.19.2",
    "fast-copy": "^3.0.2",
    "fast-equals": "^5.0.1",
    "fast-glob": "^3.3.2",
    "fuzzysort": "^3.0.2",
    "glob-to-regexp": "^0.4.1",
    "json-schema-resolver": "^2.0.0",
    "minilog": "^3.1.0",
    "nanoid": "^3.3.7",
    "rxjs": "^7.8.1",
    "tslib": "^2.3.0",
    "vscode-languageclient": "^9.0.1",
    "vscode-languageserver": "^9.0.1",
    "vscode-languageserver-textdocument": "^1.0.12",
    "vscode-textmate": "^9.1.0",
    "vscode-uri": "^3.0.8",
    "zone.js": "0.14.8"
  },
  "optionalDependencies": {
    "@vis/compliance": "^0.2.3"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "18.2.12",
    "@angular-devkit/core": "18.1.4",
    "@angular-devkit/schematics": "18.1.4",
    "@angular-eslint/eslint-plugin": "18.3.0",
    "@angular-eslint/eslint-plugin-template": "18.3.0",
    "@angular-eslint/template-parser": "18.3.0",
    "@angular/animations": "18.1.4",
    "@angular/cdk": "18.1.4",
    "@angular/cli": "~18.1.0",
    "@angular/common": "18.1.4",
    "@angular/compiler": "18.1.4",
    "@angular/compiler-cli": "18.1.4",
    "@angular/core": "18.1.4",
    "@angular/elements": "18.1.4",
    "@angular/forms": "18.1.4",
    "@angular/language-service": "18.1.4",
    "@angular/material": "18.1.4",
    "@angular/platform-browser": "18.1.4",
    "@angular/platform-browser-dynamic": "18.1.4",
    "@angular/router": "18.1.4",
    "@deck.gl/core": "^9.0.27",
    "@deck.gl/extensions": "^9.0.27",
    "@deck.gl/geo-layers": "^9.0.27",
    "@deck.gl/layers": "^9.0.27",
    "@deck.gl/mesh-layers": "^9.0.27",
    "@jsverse/transloco": "^7.4.3",
    "@mapbox/geojson-extent": "^1.0.1",
    "@material/material-color-utilities": "^0.3.0",
    "@material/web": "^2.1.0",
    "@mdi/js": "^7.3.67",
    "@ngbracket/ngx-layout": "^18.0.0",
    "@nx/angular": "19.5.7",
    "@nx/cypress": "19.5.7",
    "@nx/esbuild": "19.5.7",
    "@nx/eslint": "19.5.7",
    "@nx/eslint-plugin": "19.5.7",
    "@nx/jest": "19.5.7",
    "@nx/js": "19.5.7",
    "@nx/node": "19.5.7",
    "@nx/web": "19.5.7",
    "@nx/workspace": "19.5.7",
    "@schematics/angular": "18.1.4",
    "@swc-node/register": "1.9.2",
    "@swc/core": "1.5.7",
    "@swc/helpers": "~0.5.11",
    "@types/glob-to-regexp": "^0.4.4",
    "@types/jest": "29.4.4",
    "@types/mapbox__geojson-extent": "^1.0.2",
    "@types/mime-types": "^2.1.4",
    "@types/minilog": "^2.0.31",
    "@types/node": "^18.16.9",
    "@types/plist": "^3.0.4",
    "@types/progress": "^2.0.6",
    "@types/vscode": "^1.82.0",
    "@types/vscode-notebook-renderer": "^1.72.0",
    "@types/web": "^0.0.119",
    "@typescript-eslint/eslint-plugin": "7.18.0",
    "@typescript-eslint/parser": "7.18.0",
    "@typescript-eslint/utils": "^7.16.0",
    "@vscode/test-electron": "^2.4.1",
    "@vscode/vsce": "^3.0.0",
    "@vscode/webview-ui-toolkit": "^1.4.0",
    "@webcomponents/webcomponentsjs": "^2.8.0",
    "angular-material-css-vars": "^7.0.0",
    "axios": "1.7.4",
    "chart.js": "^4.4.3",
    "cypress": "13.13.3",
    "esbuild": "0.19.2",
    "eslint": "8.57.0",
    "eslint-config-prettier": "9.0.0",
    "eslint-plugin-cypress": "2.13.4",
    "eslint-plugin-simple-import-sort": "^12.1.1",
    "eslint-plugin-unused-imports": "^4.1.3",
    "expect": "^29.4.3",
    "get-port": "^7.1.0",
    "himalaya": "^1.1.0",
    "jest": "^29.4.3",
    "jest-environment-jsdom": "^29.4.3",
    "jest-environment-node": "^29.4.1",
    "jest-preset-angular": "14.1.1",
    "json-stringify-pretty-compact": "^3.0.0",
    "material-icons": "^1.13.12",
    "mime-types": "^2.1.35",
    "node-html-markdown": "^1.2.0",
    "npm-run-all": "^4.1.5",
    "nx": "19.5.7",
    "plist": "^3.0.6",
    "prettier": "2.7.1",
    "progress": "^2.0.3",
    "protobufjs": "^7.3.2",
    "rimraf": "^6.0.1",
    "terser-webpack-plugin": "^5.3.1",
    "ts-jest": "29.1.0",
    "ts-node": "10.9.1",
    "typescript": "5.5.4",
    "vitepress": "^1.3.3",
    "vscode-oniguruma": "^2.0.1",
    "yaml": "^2.5.0"
  },
  "engines": {
    "vscode": "^1.82.0",
    "npm": "^9.2 || ^10.0",
    "node": ">=20.12.0 || ^10.5.0"
  },
  "activationEvents": [
    "workspaceContains:**/*.pro",
    "workspaceContains:**/*.pro.def",
    "workspaceContains:**/*idl.json",
    "workspaceContains:**/*.task",
    "workspaceContains:**/*.idlnb",
    "onWebviewPanel:idlPanel",
    "onDebug"
  ],
  "main": "./dist/apps/client/main",
  "categories": [
    "Debuggers",
    "Formatters",
    "Linters",
    "Programming Languages",
    "Snippets",
    "Themes"
  ],
  "icon": "extension/images/idlicon.png",
  "contributes": {
    "breakpoints": [
      {
        "language": "idl"
      }
    ],
    "commands": [
      {
        "command": "idl.client.fileABug",
        "title": "%commands.idl.client.fileABug%"
      },
      {
        "command": "idl.client.viewLogs",
        "title": "%commands.idl.client.viewLogs%"
      },
      {
        "command": "idl.client.viewSettings",
        "title": "%commands.idl.client.viewSettings%"
      },
      {
        "command": "idl.code.addDocsToFile",
        "title": "%commands.idl.code.addDocsToFile%"
      },
      {
        "command": "idl.code.disableProblemSetting",
        "title": "%commands.idl.code.disableProblemSetting%"
      },
      {
        "command": "idl.code.fixProblem",
        "title": "%commands.idl.code.fixProblem%"
      },
      {
        "command": "idl.code.formatFile",
        "title": "%commands.idl.code.formatFile%"
      },
      {
        "command": "idl.code.formatWorkspace",
        "title": "%commands.idl.code.formatWorkspace%"
      },
      {
        "command": "idl.code.generateTask",
        "title": "%commands.idl.code.generateTask%"
      },
      {
        "command": "idl.code.migrateToDL30API",
        "title": "%commands.idl.code.migrateToDL30API%"
      },
      {
        "command": "idl.config.specifyIDLDirectory",
        "title": "%commands.idl.config.specifyIDLDirectory%"
      },
      {
        "command": "idl.config.specifyIDLDirectoryWorkspace",
        "title": "%commands.idl.config.specifyIDLDirectoryWorkspace%"
      },
      {
        "command": "idl.debug.compileFile",
        "title": "%commands.idl.debug.compileFile%",
        "icon": {
          "light": "extension/images/light/settings.svg",
          "dark": "extension/images/dark/settings.svg"
        }
      },
      {
        "command": "idl.debug.executeBatchFile",
        "title": "%commands.idl.debug.executeBatchFile%"
      },
      {
        "command": "idl.debug.resetIDL",
        "title": "%commands.idl.debug.resetIDL%",
        "icon": {
          "light": "extension/images/light/renew.svg",
          "dark": "extension/images/dark/renew.svg"
        }
      },
      {
        "command": "idl.debug.runFile",
        "title": "%commands.idl.debug.runFile%",
        "icon": {
          "light": "extension/images/light/file-play.svg",
          "dark": "extension/images/dark/file-play.svg"
        }
      },
      {
        "command": "idl.debug.startIDL",
        "title": "%commands.idl.debug.startIDL%"
      },
      {
        "command": "idl.debug.startProfiling",
        "title": "%commands.idl.debug.startProfiling%"
      },
      {
        "command": "idl.debug.stopProfiling",
        "title": "%commands.idl.debug.stopProfiling%"
      },
      {
        "command": "idl.docs.open",
        "title": "%commands.idl.docs.open%"
      },
      {
        "command": "idl.docs.openLink",
        "title": "%commands.idl.docs.openLink%"
      },
      {
        "command": "idl.notebooks.convertToPDF",
        "title": "%commands.idl.notebooks.convertToPDF%",
        "icon": {
          "light": "extension/images/light/pdf.svg",
          "dark": "extension/images/dark/pdf.svg"
        }
      },
      {
        "command": "idl.notebooks.helpAsNotebook",
        "title": "%commands.idl.notebooks.helpAsNotebook%"
      },
      {
        "command": "idl.notebooks.newNotebook",
        "title": "%commands.idl.notebooks.newNotebook%"
      },
      {
        "command": "idl.notebooks.notebookToProCode",
        "title": "%commands.idl.notebooks.notebookToProCode%",
        "icon": {
          "light": "extension/images/light/transform.svg",
          "dark": "extension/images/dark/transform.svg"
        }
      },
      {
        "command": "idl.notebooks.openENVIExample",
        "title": "%commands.idl.notebooks.openENVIExample%"
      },
      {
        "command": "idl.notebooks.openIDLExample",
        "title": "%commands.idl.notebooks.openIDLExample%"
      },
      {
        "command": "idl.notebooks.resetIDLKernel",
        "title": "%commands.idl.notebooks.resetIDLKernel%",
        "icon": {
          "light": "extension/images/light/renew.svg",
          "dark": "extension/images/dark/renew.svg"
        }
      },
      {
        "command": "idl.notebooks.resetNotebookExamples",
        "title": "%commands.idl.notebooks.resetNotebookExamples%"
      },
      {
        "command": "idl.notebooks.stopAllIDLKernels",
        "title": "%commands.idl.notebooks.stopAllIDLKernels%"
      },
      {
        "command": "idl.notebooks.stopIDLKernel",
        "title": "%commands.idl.notebooks.stopIDLKernel%",
        "icon": {
          "light": "extension/images/light/stop.svg",
          "dark": "extension/images/dark/stop.svg"
        }
      },
      {
        "command": "idl.terminal.compileFile",
        "title": "%commands.idl.terminal.compileFile%"
      },
      {
        "command": "idl.terminal.continueExecution",
        "title": "%commands.idl.terminal.continueExecution%"
      },
      {
        "command": "idl.terminal.executeBatchFile",
        "title": "%commands.idl.terminal.executeBatchFile%"
      },
      {
        "command": "idl.terminal.pauseExecution",
        "title": "%commands.idl.terminal.pauseExecution%"
      },
      {
        "command": "idl.terminal.resetIDL",
        "title": "%commands.idl.terminal.resetIDL%"
      },
      {
        "command": "idl.terminal.runFile",
        "title": "%commands.idl.terminal.runFile%"
      },
      {
        "command": "idl.terminal.startIDL",
        "title": "%commands.idl.terminal.startIDL%"
      },
      {
        "command": "idl.terminal.stepIn",
        "title": "%commands.idl.terminal.stepIn%"
      },
      {
        "command": "idl.terminal.stepOut",
        "title": "%commands.idl.terminal.stepOut%"
      },
      {
        "command": "idl.terminal.stepOver",
        "title": "%commands.idl.terminal.stepOver%"
      },
      {
        "command": "idl.webview.start",
        "title": "%commands.idl.webview.start%"
      }
    ],
    "configuration": [
      {
        "type": "object",
        "title": "%configuration.titles.root%",
        "additionalProperties": false,
        "properties": {}
      },
      {
        "type": "object",
        "title": "%configuration.titles.general%",
        "additionalProperties": false,
        "properties": {
          "idl.debugMode": {
            "type": "boolean",
            "default": false,
            "description": "%configuration.descriptions.debugMode%",
            "scope": "machine-overridable"
          }
        }
      },
      {
        "type": "object",
        "title": "%configuration.titles.documentation%",
        "additionalProperties": false,
        "properties": {
          "idl.documentation.useOnline": {
            "type": "boolean",
            "default": true,
            "description": "%configuration.descriptions.documentation.useOnline%",
            "scope": "machine-overridable"
          },
          "idl.documentation.localPort": {
            "type": "number",
            "default": 3344,
            "description": "%configuration.descriptions.documentation.localPort%",
            "scope": "machine-overridable",
            "minimum": 1024,
            "maximum": 65535
          }
        }
      },
      {
        "type": "object",
        "title": "%configuration.titles.formatting%",
        "additionalProperties": false,
        "properties": {
          "idl.code.formatting": {
            "type": "object",
            "description": "%configuration.descriptions.code.formatting%",
            "scope": "machine-overridable",
            "additionalProperties": false,
            "default": {
              "autoDoc": false,
              "autoFix": true,
              "eol": "lf",
              "styleAndFormat": true,
              "tabWidth": 2
            },
            "properties": {
              "autoDoc": {
                "type": "boolean",
                "description": "%configuration.properties.code.formatting.autoDoc%"
              },
              "autoFix": {
                "type": "boolean",
                "description": "%configuration.properties.code.formatting.autoFix%"
              },
              "eol": {
                "type": "string",
                "description": "%configuration.properties.code.formatting.eol%",
                "enum": [
                  "lf",
                  "crlf"
                ],
                "enumDescriptions": [
                  "%configuration.enumDescriptions.formatting.eol.lf%",
                  "%configuration.enumDescriptions.formatting.eol.crlf%"
                ]
              },
              "styleAndFormat": {
                "type": "boolean",
                "description": "%configuration.properties.code.formatting.styleAndFormat%"
              },
              "tabWidth": {
                "type": "number",
                "description": "%configuration.properties.code.formatting.tabWidth%"
              }
            }
          },
          "idl.code.formattingStyle": {
            "type": "object",
            "description": "%configuration.descriptions.code.formattingStyle%",
            "scope": "machine-overridable",
            "additionalProperties": false,
            "default": {
              "quotes": "single",
              "methods": "dot",
              "keywords": "lower",
              "properties": "camel",
              "control": "lower",
              "numbers": "lower",
              "hex": "lower",
              "octal": "lower",
              "binary": "lower",
              "routines": "match",
              "routineMethods": "camel",
              "systemVariables": "lower",
              "localVariables": "match",
              "structureNames": "pascal"
            },
            "properties": {
              "binary": {
                "type": "string",
                "description": "%configuration.properties.code.formattingStyle.binary%",
                "enum": [
                  "lower",
                  "upper",
                  "none"
                ],
                "enumDescriptions": [
                  "%configuration.enumDescriptions.formatting.style.lower%",
                  "%configuration.enumDescriptions.formatting.style.upper%",
                  "%configuration.enumDescriptions.formatting.style.none%"
                ]
              },
              "control": {
                "type": "string",
                "description": "%configuration.properties.code.formattingStyle.control%",
                "enum": [
                  "lower",
                  "upper",
                  "none"
                ],
                "enumDescriptions": [
                  "%configuration.enumDescriptions.formatting.style.lower%",
                  "%configuration.enumDescriptions.formatting.style.upper%",
                  "%configuration.enumDescriptions.formatting.style.none%"
                ]
              },
              "hex": {
                "type": "string",
                "description": "%configuration.properties.code.formattingStyle.hex%",
                "enum": [
                  "lower",
                  "upper",
                  "none"
                ],
                "enumDescriptions": [
                  "%configuration.enumDescriptions.formatting.style.lower%",
                  "%configuration.enumDescriptions.formatting.style.upper%",
                  "%configuration.enumDescriptions.formatting.style.none%"
                ]
              },
              "keywords": {
                "type": "string",
                "description": "%configuration.properties.code.formattingStyle.keywords%",
                "enum": [
                  "lower",
                  "upper",
                  "none"
                ],
                "enumDescriptions": [
                  "%configuration.enumDescriptions.formatting.style.lower%",
                  "%configuration.enumDescriptions.formatting.style.upper%",
                  "%configuration.enumDescriptions.formatting.style.none%"
                ]
              },
              "localVariables": {
                "type": "string",
                "description": "%configuration.properties.code.formattingStyle.localVariables%",
                "enum": [
                  "match",
                  "none"
                ],
                "enumDescriptions": [
                  "%configuration.enumDescriptions.formatting.style.match%",
                  "%configuration.enumDescriptions.formatting.style.none%"
                ]
              },
              "methods": {
                "type": "string",
                "description": "%configuration.properties.code.formattingStyle.methods%",
                "enum": [
                  "dot",
                  "arrow",
                  "none"
                ],
                "enumDescriptions": [
                  "%configuration.enumDescriptions.formatting.style.dot%",
                  "%configuration.enumDescriptions.formatting.style.arrow%",
                  "%configuration.enumDescriptions.formatting.style.none%"
                ]
              },
              "numbers": {
                "type": "string",
                "description": "%configuration.properties.code.formattingStyle.numbers%",
                "enum": [
                  "lower",
                  "upper",
                  "none"
                ],
                "enumDescriptions": [
                  "%configuration.enumDescriptions.formatting.style.lower%",
                  "%configuration.enumDescriptions.formatting.style.upper%",
                  "%configuration.enumDescriptions.formatting.style.none%"
                ]
              },
              "octal": {
                "type": "string",
                "description": "%configuration.properties.code.formattingStyle.octal%",
                "enum": [
                  "lower",
                  "upper",
                  "none"
                ],
                "enumDescriptions": [
                  "%configuration.enumDescriptions.formatting.style.lower%",
                  "%configuration.enumDescriptions.formatting.style.upper%",
                  "%configuration.enumDescriptions.formatting.style.none%"
                ]
              },
              "properties": {
                "type": "string",
                "description": "%configuration.properties.code.formattingStyle.properties%",
                "enum": [
                  "lower",
                  "upper",
                  "match",
                  "camel",
                  "pascal",
                  "none"
                ],
                "enumDescriptions": [
                  "%configuration.enumDescriptions.formatting.style.lower%",
                  "%configuration.enumDescriptions.formatting.style.upper%",
                  "%configuration.enumDescriptions.formatting.style.match%",
                  "%configuration.enumDescriptions.formatting.style.camel%",
                  "%configuration.enumDescriptions.formatting.style.pascal%",
                  "%configuration.enumDescriptions.formatting.style.none%"
                ]
              },
              "quotes": {
                "type": "string",
                "description": "%configuration.properties.code.formattingStyle.quotes%",
                "enum": [
                  "single",
                  "double",
                  "none"
                ],
                "enumDescriptions": [
                  "%configuration.enumDescriptions.formatting.style.single%",
                  "%configuration.enumDescriptions.formatting.style.double%",
                  "%configuration.enumDescriptions.formatting.style.none%"
                ]
              },
              "routines": {
                "type": "string",
                "description": "%configuration.properties.code.formattingStyle.routines%",
                "enum": [
                  "match",
                  "camel",
                  "pascal",
                  "none"
                ],
                "enumDescriptions": [
                  "%configuration.enumDescriptions.formatting.style.match%",
                  "%configuration.enumDescriptions.formatting.style.camel%",
                  "%configuration.enumDescriptions.formatting.style.pascal%",
                  "%configuration.enumDescriptions.formatting.style.none%"
                ]
              },
              "routineMethods": {
                "type": "string",
                "description": "%configuration.properties.code.formattingStyle.routineMethods%",
                "enum": [
                  "match",
                  "camel",
                  "pascal",
                  "none"
                ],
                "enumDescriptions": [
                  "%configuration.enumDescriptions.formatting.style.match%",
                  "%configuration.enumDescriptions.formatting.style.camel%",
                  "%configuration.enumDescriptions.formatting.style.pascal%",
                  "%configuration.enumDescriptions.formatting.style.none%"
                ]
              },
              "structureNames": {
                "type": "string",
                "description": "%configuration.properties.code.formattingStyle.structureNames%",
                "enum": [
                  "match",
                  "camel",
                  "pascal",
                  "none"
                ],
                "enumDescriptions": [
                  "%configuration.enumDescriptions.formatting.style.match%",
                  "%configuration.enumDescriptions.formatting.style.camel%",
                  "%configuration.enumDescriptions.formatting.style.pascal%",
                  "%configuration.enumDescriptions.formatting.style.none%"
                ]
              },
              "systemVariables": {
                "type": "string",
                "description": "%configuration.properties.code.formattingStyle.systemVariables%",
                "enum": [
                  "lower",
                  "upper",
                  "none"
                ],
                "enumDescriptions": [
                  "%configuration.enumDescriptions.formatting.style.lower%",
                  "%configuration.enumDescriptions.formatting.style.upper%",
                  "%configuration.enumDescriptions.formatting.style.none%"
                ]
              }
            }
          }
        }
      },
      {
        "type": "object",
        "title": "%configuration.titles.idl%",
        "additionalProperties": false,
        "properties": {
          "idl.IDL.directory": {
            "type": "string",
            "description": "%configuration.descriptions.IDL.directory%",
            "scope": "machine-overridable"
          },
          "idl.IDL.path": {
            "type": "array",
            "default": [],
            "description": "%configuration.descriptions.IDL.path%",
            "scope": "machine-overridable",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "idl.IDL.addWorkspaceFoldersToPath": {
            "type": "boolean",
            "default": true,
            "description": "%configuration.descriptions.IDL.addWorkspaceFoldersToPath%",
            "scope": "machine-overridable"
          },
          "idl.IDL.appendOrPrependWorkspaceFolders": {
            "enum": [
              "prepend",
              "append"
            ],
            "enumDescriptions": [
              "%configuration.enumDescriptions.workspace.prepend%",
              "%configuration.enumDescriptions.workspace.append%"
            ],
            "default": "prepend",
            "description": "%configuration.descriptions.IDL.appendOrPrependWorkspaceFolders%",
            "scope": "machine-overridable"
          },
          "idl.IDL.environment": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "%configuration.descriptions.IDL.environment%",
            "scope": "machine-overridable"
          },
          "idl.IDL.history": {
            "type": "object",
            "description": "%configuration.descriptions.IDL.history%",
            "scope": "machine-overridable",
            "additionalProperties": false,
            "default": {
              "enabled": true,
              "maxSize": 2,
              "truncateOnStartup": false,
              "folder": "${.idl}",
              "fileName": "idl-history.idllog"
            },
            "properties": {
              "enabled": {
                "type": "boolean",
                "description": "%configuration.properties.IDL.history.enabled%"
              },
              "maxSize": {
                "type": "number",
                "description": "%configuration.properties.IDL.history.maxSize%",
                "minimum": 0.5
              },
              "truncateOnStartup": {
                "type": "boolean",
                "description": "%configuration.properties.IDL.history.truncateOnStartup%"
              },
              "folder": {
                "type": "string",
                "description": "%configuration.properties.IDL.history.folder%"
              },
              "fileName": {
                "type": "string",
                "description": "%configuration.properties.IDL.history.fileName%"
              }
            }
          }
        }
      },
      {
        "type": "object",
        "title": "%configuration.titles.languageServer%",
        "additionalProperties": false,
        "properties": {
          "idl.languageServer.fullParse": {
            "type": "boolean",
            "default": true,
            "description": "%configuration.descriptions.languageServer.fullParse%",
            "scope": "machine-overridable"
          }
        }
      },
      {
        "type": "object",
        "title": "%configuration.titles.notebooks%",
        "additionalProperties": false,
        "properties": {
          "idl.notebooks.embedGraphics": {
            "type": "boolean",
            "default": true,
            "description": "%configuration.descriptions.notebooks.embedGraphics%",
            "scope": "machine-overridable"
          },
          "idl.notebooks.quietMode": {
            "type": "boolean",
            "default": true,
            "description": "%configuration.descriptions.notebooks.quietMode%",
            "scope": "machine-overridable"
          }
        }
      },
      {
        "type": "object",
        "title": "%configuration.titles.problems%",
        "additionalProperties": false,
        "properties": {
          "idl.problems.includeProblemsFromIDLPath": {
            "type": "boolean",
            "default": true,
            "description": "%configuration.descriptions.problems.includeProblemsFromIDLPath%",
            "scope": "machine-overridable"
          },
          "idl.problems.includeProblemsFromIDLPackages": {
            "type": "boolean",
            "default": false,
            "description": "%configuration.descriptions.problems.includeProblemsFromIDLPackages%",
            "scope": "machine-overridable"
          },
          "idl.problems.reportProblems": {
            "type": "boolean",
            "default": true,
            "description": "%configuration.descriptions.problems.reportProblems%",
            "scope": "machine-overridable"
          },
          "idl.problems.reportDocsProblems": {
            "type": "boolean",
            "default": true,
            "description": "%configuration.descriptions.problems.reportDocsProblems%",
            "scope": "machine-overridable"
          },
          "idl.problems.ignoreProblems": {
            "type": "array",
            "default": [],
            "description": "%configuration.descriptions.problems.ignoreProblems%",
            "scope": "machine-overridable",
            "uniqueItems": true,
            "items": {
              "type": [
                "string"
              ],
              "enum": [
                "after-continuation",
                "after-main",
                "ambiguous-keyword-abbreviation",
                "args-first",
                "bad-break",
                "bad-continue",
                "circular-include",
                "class-no-params",
                "colon-in-func",
                "colon-in-func-method",
                "docs-invalid-in-out",
                "docs-invalid-private",
                "docs-invalid-required",
                "docs-invalid-type",
                "docs-left-align",
                "docs-missing-args",
                "docs-missing-kws",
                "docs-missing-prop",
                "docs-missing-return",
                "docs-missing-struct",
                "docs-not-real-param",
                "docs-param-missing",
                "docs-prop-too-few-params",
                "docs-prop-too-many-params",
                "docs-return-has-no-type",
                "docs-return-invalid",
                "docs-return-not-needed",
                "docs-too-few-params",
                "docs-too-many-params",
                "double-token",
                "duplicate-arg-kw-var-def",
                "duplicate-func",
                "duplicate-func-method",
                "duplicate-kw-def",
                "duplicate-kw-usage",
                "duplicate-pro",
                "duplicate-pro-method",
                "duplicate-property",
                "duplicate-struct",
                "duplicate-sys-var",
                "embarrassing-file",
                "embarrassing-token",
                "empty-comp-opt",
                "empty-main",
                "expected-comma",
                "expected-statement",
                "illegal-arrow",
                "illegal-bracket",
                "illegal-chain",
                "illegal-colon",
                "illegal-comma",
                "illegal-comp-opt",
                "illegal-dictionary-op",
                "illegal-hash-op",
                "illegal-hex-escape",
                "illegal-include",
                "illegal-index-type",
                "illegal-list-op",
                "illegal-ordered-hash-op",
                "illegal-paren",
                "illegal-struct",
                "illegal-struct-op",
                "illegal-subscript",
                "illegal-ternary",
                "illegal-var-index",
                "implied-print-nb",
                "incomplete-ternary",
                "indexing-error",
                "init-method-pro",
                "multiple-comp-opt",
                "no-args-to-doc",
                "no-comp-opt",
                "no-idl2",
                "no-kws-to-doc",
                "not-closed",
                "potential-arr-type-incompatibility",
                "potential-type-incompatibility",
                "potential-undefined-var",
                "potential-var-use-before-def",
                "ptr-de-ref-ambiguity",
                "ptr-de-ref-illegal",
                "ptr-nothing-to-de-ref",
                "reserved-func",
                "reserved-func-method",
                "reserved-pro",
                "reserved-pro-method",
                "reserved-var",
                "return-missing",
                "return-vals-func",
                "return-vals-missing-func",
                "return-vals-pro",
                "routines-first",
                "standalone-expression",
                "string-literal-too-many-args",
                "todo",
                "unclosed-main",
                "unclosed-quote",
                "undefined-var",
                "unexpected-closer",
                "unexpected-comma",
                "unfinished-dot",
                "unknown-branch",
                "unknown-disabled-alias",
                "unknown-kw",
                "unknown-structure",
                "unknown-template-escape",
                "unknown-token",
                "unused-var",
                "use-idl2",
                "var-use-before-def"
              ],
              "enumDescriptions": [
                "%parsing.errors.35%",
                "%parsing.errors.3%",
                "%parsing.errors.103%",
                "%parsing.errors.47%",
                "%parsing.errors.67%",
                "%parsing.errors.66%",
                "%parsing.errors.106%",
                "%parsing.errors.81%",
                "%parsing.errors.14%",
                "%parsing.errors.15%",
                "%parsing.errors.53%",
                "%parsing.errors.56%",
                "%parsing.errors.54%",
                "%parsing.errors.55%",
                "%parsing.errors.59%",
                "%parsing.errors.48%",
                "%parsing.errors.50%",
                "%parsing.errors.80%",
                "%parsing.errors.52%",
                "%parsing.errors.79%",
                "%parsing.errors.63%",
                "%parsing.errors.64%",
                "%parsing.errors.82%",
                "%parsing.errors.83%",
                "%parsing.errors.60%",
                "%parsing.errors.61%",
                "%parsing.errors.62%",
                "%parsing.errors.57%",
                "%parsing.errors.58%",
                "%parsing.errors.16%",
                "%parsing.errors.72%",
                "%parsing.errors.24%",
                "%parsing.errors.26%",
                "%parsing.errors.73%",
                "%parsing.errors.75%",
                "%parsing.errors.23%",
                "%parsing.errors.25%",
                "%parsing.errors.74%",
                "%parsing.errors.27%",
                "%parsing.errors.28%",
                "%parsing.errors.5%",
                "%parsing.errors.4%",
                "%parsing.errors.41%",
                "%parsing.errors.34%",
                "%parsing.errors.43%",
                "%parsing.errors.68%",
                "%parsing.errors.8%",
                "%parsing.errors.19%",
                "%parsing.errors.78%",
                "%parsing.errors.10%",
                "%parsing.errors.9%",
                "%parsing.errors.40%",
                "%parsing.errors.89%",
                "%parsing.errors.87%",
                "%parsing.errors.70%",
                "%parsing.errors.11%",
                "%parsing.errors.91%",
                "%parsing.errors.86%",
                "%parsing.errors.88%",
                "%parsing.errors.18%",
                "%parsing.errors.17%",
                "%parsing.errors.85%",
                "%parsing.errors.84%",
                "%parsing.errors.13%",
                "%parsing.errors.105%",
                "%parsing.errors.109%",
                "%parsing.errors.98%",
                "%parsing.errors.95%",
                "%parsing.errors.76%",
                "%parsing.errors.45%",
                "%parsing.errors.49%",
                "%parsing.errors.38%",
                "%parsing.errors.39%",
                "%parsing.errors.51%",
                "%parsing.errors.0%",
                "%parsing.errors.92%",
                "%parsing.errors.90%",
                "%parsing.errors.100%",
                "%parsing.errors.102%",
                "%parsing.errors.96%",
                "%parsing.errors.94%",
                "%parsing.errors.93%",
                "%parsing.errors.30%",
                "%parsing.errors.37%",
                "%parsing.errors.29%",
                "%parsing.errors.36%",
                "%parsing.errors.12%",
                "%parsing.errors.31%",
                "%parsing.errors.21%",
                "%parsing.errors.22%",
                "%parsing.errors.20%",
                "%parsing.errors.32%",
                "%parsing.errors.108%",
                "%parsing.errors.65%",
                "%parsing.errors.6%",
                "%parsing.errors.33%",
                "%parsing.errors.46%",
                "%parsing.errors.99%",
                "%parsing.errors.1%",
                "%parsing.errors.44%",
                "%parsing.errors.69%",
                "%parsing.errors.2%",
                "%parsing.errors.107%",
                "%parsing.errors.97%",
                "%parsing.errors.77%",
                "%parsing.errors.71%",
                "%parsing.errors.7%",
                "%parsing.errors.104%",
                "%parsing.errors.42%",
                "%parsing.errors.101%"
              ]
            }
          }
        }
      },
      {
        "type": "object",
        "title": "%configuration.titles.questions%",
        "additionalProperties": false,
        "properties": {
          "idl.dontAsk": {
            "type": "object",
            "description": "%configuration.descriptions.dontAsk%",
            "scope": "machine-overridable",
            "additionalProperties": false,
            "default": {
              "forIDLDir": false,
              "forIconChange": false,
              "forFormatterChange": false,
              "toOpenDocs": false
            },
            "properties": {
              "forIDLDir": {
                "type": "boolean",
                "description": "%configuration.descriptions.dontAsk.forIDLDir%"
              },
              "forIconChange": {
                "type": "boolean",
                "description": "%configuration.descriptions.dontAsk.forIconChange%"
              },
              "forFormatterChange": {
                "type": "boolean",
                "description": "%configuration.descriptions.dontAsk.forFormatterChange%"
              },
              "toOpenDocs": {
                "type": "boolean",
                "description": "%configuration.descriptions.dontAsk.toOpenDocs%"
              }
            }
          }
        }
      }
    ],
    "configurationDefaults": {
      "[idl]": {
        "editor.semanticHighlighting.enabled": true
      }
    },
    "customEditors": [
      {
        "viewType": "idl.enviOpener",
        "displayName": "%envi.openerTitle%",
        "selector": [
          {
            "filenamePattern": "*.dat"
          },
          {
            "filenamePattern": "*.jp2"
          },
          {
            "filenamePattern": "*.jp2000"
          },
          {
            "filenamePattern": "*.nitf"
          },
          {
            "filenamePattern": "*.ntf"
          },
          {
            "filenamePattern": "*.r0"
          },
          {
            "filenamePattern": "*.tif"
          },
          {
            "filenamePattern": "*.tiff"
          }
        ],
        "priority": "option"
      }
    ],
    "debuggers": [
      {
        "type": "idl",
        "label": "%debugger.idl.label%",
        "runtime": "node",
        "configurationAttributes": {
          "launch": {
            "required": [
              "name",
              "type",
              "request"
            ],
            "properties": {}
          }
        },
        "initialConfigurations": [
          {
            "type": "idl",
            "name": "%debugger.idl.name%",
            "request": "launch"
          }
        ],
        "configurationSnippets": [
          {
            "label": "%debugger.idl.label%",
            "description": "%debugger.idl.description%",
            "body": {
              "type": "idl",
              "name": "%debugger.idl.name%",
              "request": "launch"
            }
          }
        ]
      }
    ],
    "grammars": [
      {
        "language": "idl",
        "scopeName": "source.idl",
        "path": "extension/language/syntaxes/idl.tmLanguage"
      },
      {
        "language": "idl-log",
        "scopeName": "source.idl-log",
        "path": "extension/language/syntaxes/idl-log.tmLanguage"
      },
      {
        "language": "idl-md-injection",
        "scopeName": "markdown.idl.codeblock",
        "path": "extension/language/syntaxes/code-blocks.json",
        "injectTo": [
          "text.html.markdown"
        ],
        "embeddedLanguages": {
          "meta.embedded.block.idl": "idl"
        }
      }
    ],
    "iconThemes": [
      {
        "id": "idl-icons",
        "label": "%icons.label%",
        "path": "./extension/icon-theme/vs-seti-icon-theme.json"
      }
    ],
    "jsonValidation": [
      {
        "fileMatch": "*.task",
        "url": "./extension/language/schemas/tasks/schema.json"
      },
      {
        "fileMatch": "*idl.json",
        "url": "./extension/language/schemas/config/schema.json"
      }
    ],
    "languages": [
      {
        "id": "idl",
        "aliases": [
          "IDL",
          "idl"
        ],
        "extensions": [
          ".pro",
          ".pro.def"
        ],
        "configuration": "extension/language/syntaxes/language-configuration.json",
        "mimetypes": [
          "text/idl",
          "application/idl"
        ],
        "icon": {
          "dark": "extension/images/dark/idlicon-color.svg",
          "light": "extension/images/light/idlicon-color.svg"
        }
      },
      {
        "id": "idl-md-injection",
        "icon": {
          "dark": "extension/images/dark/idlicon-color.svg",
          "light": "extension/images/light/idlicon-color.svg"
        },
        "aliases": [
          "%languages.idlMdInject%"
        ]
      },
      {
        "id": "idl-notebook",
        "extensions": [
          ".idlnb"
        ],
        "icon": {
          "dark": "extension/images/dark/idlicon-color.svg",
          "light": "extension/images/light/idlicon-color.svg"
        },
        "aliases": [
          "%languages.idlNotebook%"
        ]
      },
      {
        "id": "idl-log",
        "mimetypes": [
          "text/idl-log",
          "application/idl-log"
        ],
        "extensions": [
          ".idllog"
        ],
        "configuration": "extension/language/syntaxes/language-configuration.json",
        "icon": {
          "dark": "extension/images/dark/idlicon-color.svg",
          "light": "extension/images/light/idlicon-color.svg"
        },
        "aliases": [
          "%languages.idlLog%"
        ]
      },
      {
        "id": "json",
        "aliases": [
          "Task",
          "task"
        ],
        "extensions": [
          ".task"
        ]
      },
      {
        "id": "json",
        "aliases": [
          "Style",
          "style"
        ],
        "extensions": [
          ".style"
        ]
      },
      {
        "id": "json",
        "aliases": [
          "Model",
          "model"
        ],
        "extensions": [
          ".model"
        ]
      },
      {
        "id": "json",
        "aliases": [
          "EVS",
          "evs"
        ],
        "extensions": [
          ".evs"
        ]
      },
      {
        "id": "json",
        "aliases": [
          "EPT",
          "ept"
        ],
        "extensions": [
          ".ept"
        ]
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "idl.code.disableProblemSetting",
          "when": "false"
        },
        {
          "command": "idl.code.fixProblem",
          "when": "false"
        },
        {
          "command": "idl.docs.openLink",
          "when": "false"
        },
        {
          "command": "idl.notebooks.helpAsNotebook",
          "when": "false"
        },
        {
          "command": "idl.webview.start",
          "when": "false"
        }
      ],
      "debug/toolBar": [
        {
          "command": "idl.debug.compileFile",
          "group": "navigation",
          "when": "debugType == idl"
        },
        {
          "command": "idl.debug.runFile",
          "group": "navigation",
          "when": "debugType == idl"
        },
        {
          "command": "idl.debug.resetIDL",
          "group": "navigation",
          "when": "debugType == idl"
        }
      ],
      "notebook/toolbar": [
        {
          "command": "idl.notebooks.resetIDLKernel",
          "group": "status",
          "when": "resourceExtname == .idlnb"
        },
        {
          "command": "idl.notebooks.stopIDLKernel",
          "group": "status",
          "when": "resourceExtname == .idlnb"
        },
        {
          "command": "idl.notebooks.notebookToProCode",
          "group": "status",
          "when": "resourceExtname == .idlnb"
        },
        {
          "command": "idl.notebooks.convertToPDF",
          "group": "status",
          "when": "resourceExtname == .idlnb"
        }
      ]
    },
    "notebookRenderer": [
      {
        "id": "idl-notebook-renderer",
        "displayName": "%notebooks.renderer%",
        "entrypoint": "./dist/apps/notebook/renderer/src/main.js",
        "mimeTypes": [
          "idl/notebook-renderer"
        ],
        "requiresMessaging": "optional"
      }
    ],
    "notebooks": [
      {
        "type": "idl-notebook",
        "displayName": "%notebooks.title%",
        "selector": [
          {
            "filenamePattern": "*.idlnb"
          }
        ]
      }
    ],
    "snippets": [
      {
        "language": "idl",
        "path": "extension/language/snippets/comment-block.json"
      },
      {
        "language": "idl",
        "path": "extension/language/snippets/idl.json"
      },
      {
        "language": "idl",
        "path": "extension/language/snippets/loops.json"
      },
      {
        "language": "idl",
        "path": "extension/language/snippets/conditionals.json"
      },
      {
        "language": "idl",
        "path": "extension/language/snippets/envi.json"
      },
      {
        "language": "idl",
        "path": "extension/language/snippets/objects.json"
      }
    ],
    "themes": [
      {
        "label": "%themes.new%",
        "uiTheme": "vs-dark",
        "path": "extension/language/themes/novus.json"
      },
      {
        "label": "%themes.neon%",
        "uiTheme": "vs-dark",
        "path": "extension/language/themes/neon.json"
      },
      {
        "label": "%themes.retro%",
        "uiTheme": "vs",
        "path": "extension/language/themes/retro.json"
      }
    ],
    "views": {
      "idl-view": [
        {
          "id": "idl-tree",
          "name": "%idl.tree.name%"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "idl-view",
          "title": "IDL",
          "icon": "extension/images/idlicon.svg"
        }
      ]
    }
  }
}
